<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/styles/index.css">
    <title>Home</title>
</head>

<body>

    <% let circumference=100 * 2 * Math.PI; %>

    <div class="container">

        <div class="card card-download">
            <p>Download - Mbps</p>
            <svg class="circular-progress-bar">
                <circle class="track" r="100" cx="125" cy="125" style="stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( 100 / 125) * circumference) %>px
                        " />
                <circle class="progress" r="100" cx="125" cy="125" style="stroke:#1fa8e7; stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( avgDownloadBandwidth / 125) *
                        circumference) %>px
                        " />
            </svg>
            <p><%-avgDownloadBandwidth%></p>
        </div>

        <div class="card card-upload">
            <p>Upload - Mbps</p>
            <svg class="circular-progress-bar">
                <circle class="track" r="100" cx="125" cy="125" style="stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( 100 / 125) * circumference) %>px
                        " />
                <circle class="progress" r="100" cx="125" cy="125" style="stroke:#bd71ff; stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( avgUploadBandwidth / 125) *
                        circumference) %>px
                        " />
            </svg>
            <p><%-avgUploadBandwidth%></p>
        </div>

        <div class="card card-latency">
            <p>Latency - ms</p>
            <svg class="circular-progress-bar">
                <circle class="track" r="100" cx="125" cy="125" style="stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( 100 / 125) * circumference) %>px
                        " />
                <circle class="progress" r="100" cx="125" cy="125" style="stroke:#f2485c; stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( avgLatency / 125) *
                        circumference) %>px
                        " />
            </svg>
            <p><%-avgLatency%></p>
        </div>

        <div class="card card-jitter">
            <p>Jitter</p>
            <svg class="circular-progress-bar">
                <circle class="track" r="100" cx="125" cy="125" style="stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset:<%-parseInt(circumference - ( 100 / 125) * circumference) %>px
                        " />
                <circle class="progress" r="100" cx="125" cy="125" style="stroke:#e76f2e; stroke-dasharray:<%-parseInt(circumference)%>px;
                        stroke-dashoffset: <%-parseInt(circumference - ( avgJitter / 125) *
                        circumference) %>px
                        " />
            </svg>
            <p><%-avgJitter%></p>
        </div>

    </div>
    <script>
        let cards = document.getElementsByClassName('card');
        console.log(cards)
        for (card in cards) {
            console.log(window.screen.height / 2);
            cards[card].height = (window.screen.height / 2) + "px";
            console.log(cards[card].style)
        }
    </script>
</body>

</html>